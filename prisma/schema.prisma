generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  socketId  String?   @unique
  email     String    @unique
  user_name String?   @unique
  password  String
  color     Json
  imageUrl  String?
  createdAt DateTime  @default(now())
  online    Boolean   @default(false)
  lastSeen  DateTime  @default(now())
  messages  Message[]
  rooms     Room[]    @relation("RoomToUser")
}

model Message {
  id           Int       @id @default(autoincrement())
  text         String
  userId       Int
  replyId      Int?
  roomId       String
  readUsers    Int[]
  status       String?
  createdAt    DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime  @default(now()) @updatedAt @db.Timestamptz(3)
  reply        Message?  @relation("ReplyMessage", fields: [replyId], references: [id], onDelete: Cascade)
  replyMessage Message[] @relation("ReplyMessage")
  room         Room      @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Room {
  id        String    @id @default(uuid())
  color     Json
  imageUrl  String?
  owner     Int
  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  messages  Message[]
  users     User[]    @relation("RoomToUser")
}
